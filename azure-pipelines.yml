# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
      - master
      - refs/tags/v*
  paths:
    exclude:
      - readme.md
variables:
  SonarQube: 'Azure-SQ-Connection'
  projectName: 'Trends'
  projectKey: 'Trends'
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  
stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "$env:BUILD_SOURCEBRANCH"
          - script: |
              echo $(isMaster)
          - template: sonar.yml
          - template: build-pipeline.yml
            parameters:
              enable_sonarqube_analysis: true
          - template: test.yml
          
        pool:
          vmImage: 'ubuntu-latest'
